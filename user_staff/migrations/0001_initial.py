# Generated by Django 4.2.1 on 2023-11-09 10:55

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('book', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserPurchasesList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to=settings.AUTH_USER_MODEL, verbose_name='related user')),
            ],
            options={
                'verbose_name': 'user purchases list',
                'verbose_name_plural': 'users purchases lists',
            },
        ),
        migrations.CreateModel(
            name='UserFavouriteBooks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='favorite', to=settings.AUTH_USER_MODEL, verbose_name='related user')),
                ('user_liked_books', models.ManyToManyField(blank=True, to='book.book', verbose_name='liked books list')),
            ],
            options={
                'verbose_name': 'favorite',
                'verbose_name_plural': 'favorite',
            },
        ),
        migrations.CreateModel(
            name='UserCart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cart', to=settings.AUTH_USER_MODEL, verbose_name='related user')),
            ],
            options={
                'verbose_name': 'cart',
                'verbose_name_plural': 'carts',
            },
        ),
        migrations.CreateModel(
            name='PurchaseItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(99)], verbose_name='bought quantity')),
                ('bought_time', models.DateTimeField(auto_now_add=True, verbose_name='bought time')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='book_purchase', to='book.book', verbose_name='bought book')),
                ('user_cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_item', to='user_staff.userpurchaseslist', verbose_name="related list of user's purchases")),
            ],
            options={
                'verbose_name': 'purchase item',
                'verbose_name_plural': 'purchase items',
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(99)], verbose_name='stored quantity')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='book_cart', to='book.book', verbose_name='stored book')),
                ('user_cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_item', to='user_staff.usercart', verbose_name="user's cart")),
            ],
            options={
                'verbose_name': 'cart item',
                'verbose_name_plural': 'cart items',
            },
        ),
    ]
